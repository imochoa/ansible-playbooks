- name: Check if nix directory exists
  ansible.builtin.stat:
    path: "/nix"
  register: dir_check

- name: Debug message if command exists (optional)
  ansible.builtin.debug:
    msg: "nix already installed, skipping script download/execution"
  when: dir_check.stat.exists

- name: Install Nixks if directory does not exist
  when: not dir_check.stat.exists
  vars:
    install_dir: "/opt/determinate-systems"
    install_script: "/opt/determinate-systems/determinate-systems-nix-installer.sh"
  block:
    # sudo apt-get install curl aptitude ca-certificates
    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ install_dir }}"
        state: directory
        mode: "0755"
    # curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
    - name: Download script
      ansible.builtin.get_url:
        url: "https://install.determinate.systems/nix"
        dest: "{{ install_script }}"
        checksum: "sha256:101a2169e079fb3b5d92a22040d636025857d0ab2ef6e0fdb0762b26f5580c7d"
        mode: "0755"
      register: download_result

    - name: Execute installer
      ansible.builtin.command: "{{ install_script }} install --no-confirm --explain"
      when: download_result is success

    - name: Execute test
      ansible.builtin.command: "{{ install_script }} self-test"
      when: download_result is success
