---
# - name: Check if command already exists
#   # ansible.builtin.command:
#   #   argv:
#   #     - which
#   #     - nix
#   become: true
#   become_user: {{ username_on_the_host}}username_on_the_hostchoa
#   ansible.builtin.command:
#     argv:
#       - whoami
#       # - which
#       # - ls
#   register: command_check
#   ignore_errors: true
#   changed_when: false

# - debug: var=command_check

# acl pkgs
#  Home Manager init command as standalone Flake

# - name: Check if home manager directory exists
#   ansible.builtin.stat:
#     path: "/home/{{ username_on_the_host }}/.config/home-manager"
#   register: dir_check

# - name: Debug message if command exists (optional)
#   ansible.builtin.debug:
#     msg: "nix alreadksy installed, skipping script download/execution"
#   when: dir_check.stat.exists

# https://docs.ansible.com/ansible-core/2.16/playbook_guide/playbooks_privilege_escalation.html#risks-of-becoming-an-unprivileged-user
- name: Make sure Home Manager is initialized
  become: true
  become_user: "{{ username_on_the_host }}"
  # vars:
  #   allow_world_readable_tmpfiles: true
  ansible.builtin.command:
    argv:
      - /nix/var/nix/profiles/default/bin/nix
      - run
      - home-manager/master
      - --
      - init
    creates: /home/{{ username_on_the_host }}/.config/home-manager
  register: command_check
  changed_when: false
# move only file "home.nix" to backup somewhere

# Clone a repo .config/home-manager

# nix switch

# - name: Install Home Manager if directory does not exist
#   when: not dir_check.stat.exists
#   vars:
#     someVar: "/opt/determinate-systems"
#   block:

# - name: Check if command already exists
#   become: true
#   become_user: "{{ username_on_the_host }}"
#   ansible.builtin.command:
#     chdir: "/home/{{  username_on_the_host }}/.config/home-manager"
#     argv:
#       - home-manager
#       - switch
#   register: command_b
#   ignore_errors: true
#   changed_when: false

# - name: Show command_check result
#   ansible.builtin.debug:
#     var: command_b
# - debug: var=command_checkkz

# # If it's a private repo...
# nix run nixpkgs#gh -- auth login
# nix run nixpkgs#gh -- repo clone <user>/<repo> ~/your-home
# # For public repos/after giving access to private ones...
# nix run home-manager -- switch --flake ~/your-home#<flakename>

# - name: Debug message if command exists (optional)
#   ansible.builtin.debug:
#     msg: "nix already installed, skipping script download/execution"
#   when: command_check.rc == 0

# - name: Install Nix if command does not exist
#   when: command_check.rc != 0
#   block:
#     # https://nix-community.github.io/home-manager/index.xhtml#sec-flakes-standalone
#     - name: FLAKE STANDALONE INSTALLATION
#       ansible.builtin.file:
#         path: "/opt/determinate-systems"
#         state: directory
#         mode: "0755"
#         # /nix/var/nix/profiles/default/bin/nix

#   #         nix run home-manager/master -- init

#   # For Nixpkgs or NixOS version 25.05 run

#   # nix run home-manager/release-25.05 -- init
