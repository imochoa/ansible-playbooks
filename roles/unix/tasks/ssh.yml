# - name: Add a host in the configuration
#   community.general.ssh_config:
#     user: akasurde
#     host: "example.com"
#     add_keys_to_agent: true
#     hostname: "github.com"
#     identity_file: "/home/akasurde/.ssh/id_rsa"
#     port: "2223"
#     state: present
#     other_options:
#       serveraliveinterval: "30"

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "{{ local_home }}/.ssh"
    state: directory
    owner: "{{ user_name }}"
    # group: "{{ user_name }}"
    mode: "0700"

- name: "Decrypt private key"
  ansible.builtin.copy:
    src: "id_jcyk"
    dest: "{{ local_home }}/.ssh/id_jcyk"
    mode: 0600

- name: "Decrypt public key"
  ansible.builtin.copy:
    src: "id_jcyk.pub"
    dest: "{{ local_home }}/.ssh/id_jcyk.pub"
    mode: 0644

- name: Set up multiple authorized keys
  ansible.posix.authorized_key:
    user: "{{user_name}}"
    state: present
    key: "{{ lookup('file', local_home + '/.ssh/id_jcyk.pub') }}"

# for macos call
# /usr/bin/ssh-add --apple-use-keychain <private>
# tty for password

# auto-get known hosts, less secure
# ssh-keyscan github.com >> ~/.ssh/known_hosts

- name: Another way to call known_hosts
  ansible.builtin.known_hosts:
    name: github.com
    key: github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    path: "{{ local_home }}/.ssh/known_hosts"
    state: present

# - name: Ensure .ssh config exists
#   ansible.builtin.file:
#     path: "{{ local_home }}/.ssh/config"
#     owner: "{{ user_name }}"
#     state: "touch"
#     # group: "{{ user_name }}"
#     mode: "0600"

- name: ensure file exists
  copy:
    content: ""
    dest: "{{ local_home }}/.ssh/config"
    force: false
    # group: sys
    owner: "{{ user_name }}"
    mode: 0600

# TODO: use cog?
- name: Insert/Upkey a new line
  ansible.builtin.blockinfile:
    path: "{{ local_home }}/.ssh/config"
    append_newline: true
    prepend_newline: true
    block: |
      Host *
          UseKeychain yes


# - name: Start SSH agent and set environment variables
#   ansible.builtin.shell: |
#     eval "$(ssh-agent -s)"
#     echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK; SSH_AGENT_PID=$SSH_AGENT_PID"
#   register: ssh_agent_output
#   changed_when: false # Avoids reporting "changed" on every run

# - name: Set SSH agent environment variables
#   ansible.builtin.set_fact:
#     ssh_auth_sock: "{{ ssh_agent_output.stdout | regex_search('SSH_AUTH_SOCK=([^;]+)') }}"
#     ssh_agent_pid: "{{ ssh_agent_output.stdout | regex_search('SSH_AGENT_PID=([^;]+)') }}"

# different for macos & linux
# - name: Add SSH private key to agent
#   ansible.builtin.shell: |
#     ssh-add /path/to/private_key  # Replace with your key path
#   environment:
#     SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
#   no_log: true # Hides sensitive key paths from logs

# - name: Clone a repo using SSH agent
#   ansible.builtin.git:
#     repo: "{{ AnsiblePullRepo }}"
#     version: master
#     update: yes
#     dest: "/path/to/clone"
#   environment:
#     SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"

# - name: List keys in agent
#   ansible.builtin.shell: "ssh-add -l"
#   environment:
#     SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
