---
- name: Install packages
  become: true
  ansible.builtin.apt:
    name: "{{ debian.packages_to_install }}"
    state: present

- name: Install Flatpak
  become: true
  ansible.builtin.apt:
    name: flatpak
    state: present
#     sudo apt install gnome-software-plugin-flatpak

- name: Add Flathub repository
  become: true
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

- name: Set up Flatpak
  community.general.flatpak:
    name: "{{ debian.flatpak_flathub_names }}"
    remote: flathub
    state: present

# Snap packages
- name: Ensure snapd is installed
  become: true
  ansible.builtin.apt:
    name: snapd
    state: present

- name: Install Snap packages
  become: true
  community.general.snap:
    name: "{{ debian.snap_packages }}"
    state: present

- name: Check if my_package is installed
  ansible.builtin.command: dpkg-query -W code
  register: my_package_check_deb
  failed_when: my_package_check_deb.rc > 1
  changed_when: my_package_check_deb.rc == 1
# - name: Download Code .deb
#   ansible.builtin.get_url:
#     url: https://code.visualstudio.com/docs/?dv=linux64_deb
#     dest: /tmp/code.deb
#     checksum: sha256:349cc1b261547c533ddc479dbed1e63c395818c119dede27797896ced2924ab7
#     when: my_package_check_deb.rc == 1

- name: Install
  become: true
  ansible.builtin.apt:
    deb: "https://vscode.download.prss.microsoft.com/dbazure/download/stable/7adae6a56e34cb64d08899664b814cf620465925/code_1.102.1-1752598717_amd64.deb"
  # sudo: true
  when: my_package_check_deb.rc == 1

# https://chaosmail.github.io/programming/2015/03/04/install-deb-packages-in-ansible/
# TODO chromium extensions

# Auto-start syncthing
# Syncthing
# Through apt -> https://apt.syncthing.net/
# create startup app
# cp /usr/share/applications/syncthing-start.desktop ~/.config/autostart/

# syncthing
# cd ~/.config/systemd/user/
# imochoa@box:~/.config/systemd/user$ curl -LO https://raw.githubusercontent.com/syncthing/syncthing/refs/heads/main/etc/linux-systemd/system/syncthing%40.service
# need to rename it so it has @imochoa
# mv syncthing.service syncthing@imochoa.service
# imochoa@box:~/.config/systemd/user$ systemctl daemon-reload
# imochoa@box:~/.config/systemd/user$ systemctl --user start syncthing.service
# Failed to start syncthing.service: Unit syncthing.service not found.
# imochoa@box:~/.config/systemd/user$ systemctl --user start syncthing@imochoa.service
# imochoa@box:~/.config/systemd/user$ systemctl --user enable syncthing@imochoa.service
# /usr/local/lib/systemd/system

# TODO: try as system service

# loginctl enable-linger imochoa
# sudo loginctl enable-linger $USER

# ZSH as default
# # ZSH setup
# # register shell
# sudo sh -c "echo \"`which zsh`\" >> /etc/shells"
# # YOU MUST LOG OUT TO SEE THE CHANGE
# sudo chsh -s $(which zsh) $USER

# JOPLIN
# 1. get plugin `.jpl` from [the repo](https://github.com/joplin/plugins/tree/master/plugins)
# 2. Copy to `~/.config/joplin-desktop/plugins`
# 	> This path might be different on your device - check at the top of the Options page in the Configuration screen)
- name: Ensure remote .ssh directory exists
  ansible.builtin.file:
    path: /home/{{ username_on_the_host }}/.config/joplin-desktop/plugins
    state: directory
    owner: "{{ username_on_the_host }}"
    group: "{{ username_on_the_host }}"
- name: Download joplin plugins
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/joplin/plugins/master/plugins/{{ item }}/plugin.jpl"
    dest: "/home/{{ username_on_the_host }}/.config/joplin-desktop/plugins/{{ item }}.jpl"
  loop: "{{ joplin_plugins }}"
# - name: Download joplin plugin file and with check (sha256)
#   become: true
#   become_user: "{{ username_on_the_host }}"
#   ansible.builtin.get_url:
#     url: "https://raw.github.com/joplin/plugins/master/plugins/{{item}}/plugin.jpl"
#     dest: "{{ username_on_the_host }}/.config/joplin-desktop/plugins/"
#     # checksum: sha256:b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c
#   loop:
#     "{{joplinPlugins}}"
#     # loop_control:
#     #   loop_var: plugin
